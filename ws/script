const $id=e=>document.getElementById(e);function createProductHTML(e){return`<section id="about${e.id}" class="customsection"\n                style="--c1: ${e.colour}10;">\n<div class="features .container">\n  <div class="header">\n     <h2 class="subtle" style="text-shadow: ${e.colour}10 0 5px 5px;font-size: 18px;font-weight: 800;">${e.name}<hr style="border-color:${e.colour}20;width:10%;"></h2>\n     <a href="#${e.id+"_prices"}"\n              onmouseover="$id('darrow${e.id}').style.color = '${e.colour}'"\n              onmouseout="$id('darrow${e.id}').style.color = 'white'">\n              <p><i id="darrow${e.id}" class="fa fa-angle-double-down"\n                 onmouseover="this.style.color = '${e.colour}'"\n                 onmouseout="this.style.color = 'white'"\n                 style="font-size: 19px;color:white;" aria-hidden="true"></i> \n           <a href="#${e.id+"_prices"}"\n              style="font-size: 19px;color:white;"\n              onmouseover="$id('darrow${e.id}').style.color = '${e.colour}'"\n              onmouseout="$id('darrow${e.id}').style.color = 'white'">SEE PRICES</a></p>\n           </a>\n  </div>\n  <div class="feature-list" style="margin-top:0px;">\n     <div class="feature grid grid-2" style="float:none; width:auto;padding:0;">\n        <h2 style="font-size: 18px;font-weight: 800;">Features</h2>\n        <div class="grid-content-box"\n           style="border-bottom: 1px solid ${e.colour};box-shadow: 0 0 30px 0 ${e.colour}33;">\n           ${e.features}\n        </div>\n     </div>\n     <br>\n     <hr style="border-color:${e.colour}20;width:50%;">\n     <div class="feature grid grid-2" style="float:none; width:auto;padding:0;">\n        <h2 style="font-size: 18px;font-weight: 800;">Security & Staff</h2>\n        <div class="grid-content-box"\n           style="border-bottom: 1px solid ${e.colour};box-shadow: 0 0 30px 0 ${e.colour}33;">\n           ${e.secNStaff}\n        </div>\n     </div>\n  </div>\n  ${1==e.hasPreview?`<div class="clear"></div>\n     <hr style="border-color:${e.colour}20;width:50%;">\n     <h2 style="font-size: 18px;font-weight: 800;">MEDIA</h2>\n    <div class="main_view">\n    <div class="preview-container" data-images='${JSON.stringify(e.preview_imgs)}' data-is-first-video="${e.previewVideo}">\n<img src="" alt="preview-product-${e.name}">\n<iframe width="704" height="315" src="" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>\n<button class="prev-btn" style="background-color: #0f0f0f8c;\nborder: 0;\ncolor: white;\nborder-radius: 5px;\npadding: 10px;\nmargin: 5px;">  \n<i class="fa fa-angle-double-left" aria-hidden="true"></i>\n</button>\n<button class="next-btn"style="background-color: #0f0f0f8c;\nborder: 0;\ncolor: white;\nborder-radius: 5px;\npadding: 8px;\nmargin: 5px;">\n<i class="fa fa-angle-double-right" aria-hidden="true"></i>\n</button>`:""}\n</div>\n</div>\n</div>\n</section>\n<section class="zproducts" id="${e.id+"_prices"}" style="background: url(${e.bgImg});position:relative;min-height: calc(100% - 100px);\nbackground-repeat: no-repeat;\nbackground-position: center;\nbackground-size: cover;">\n<div class="header">\n  <h1 class="subtle" style="width:350px;border-bottom: 1px solid ${e.colour};">GET PRODUCT</h1>\n</div>\n<div class="container" style="width: 350px;border-bottom: 1px solid ${e.colour};box-shadow: 0 0 30px 0 ${e.colour}33;">\n  <div class="grid grid-1">\n     <div class="item">\n        <p style="font-size: 24px;margin-top:10px">SUBSCRIPTION</p>\n        <div class="list-func">\n           <a href="#about${e.id}" style="color:transparent;"\n              onmouseover="$id('uarrow${e.id}').style.color = '${e.colour}'"\n              onmouseout="$id('uarrow${e.id}').style.color = 'white'">\n              <h1><i id="uarrow${e.id}" class="fa fa-angle-double-up"\n                 onmouseover="this.style.color = '${e.colour}'"\n                 onmouseout="this.style.color = 'white'"\n                 style="font-size: 19px;color:white;" aria-hidden="true"></i> \n           <a href="#about${e.id}"\n              style="font-size: 19px;color:white;"\n              onmouseover="$id('uarrow${e.id}').style.color = '${e.colour}'"\n              onmouseout="$id('uarrow${e.id}').style.color = 'white'">See Features</a></h1>\n           </a>\n        </div>\n        <br>\n        <div style="display: -webkit-box;\n           display: -ms-flexbox;\n           display: flex;\n           -webkit-box-pack: center;\n           -ms-flex-pack: center;\n                   justify-content: center;\n           height: 30px;\n           -ms-flex-line-pack: start;\n               align-content: flex-start;\n           -webkit-box-align: center;\n           -ms-flex-align: center;\n                   align-items: center;\n           -ms-flex-wrap: wrap;\n               flex-wrap: wrap;">\n           <label for="sub_price_combo_${e.id}">Final Price:&nbsp;</label>\n           <span id="final_price_${e.id}" style="font-weight:bold;">${"&nbsp;$"+e.subsType.prices[0]}</span>\n        </div>\n        <ul class="range-labels" id="range_labels_${e.id}"></ul>\n        <br>\n        <br>\n        <div class="range" id="range_${e.id}">\n           <input type="range" min="1" max="1" steps="1" value="1">\n        </div>\n        <hr style="border-color:${e.colour}20;width:50%;">\n        <p><a class="btn-full" id="SAbtn_buy_${e.id}" style="font-weight:800;cursor:pointer;box-shadow: 0 0 30px 0 ${e.colour}33;"\n            data-SA-pr="none">BUY NOW! (USD/EU)</a></p>\n           <br>\n            <p style="font-size: 19px;margin-top:10px">OR</p>\n            <p><a class="btn-full" href="https://ceneka.net/zincheats" style="font-weight:800;cursor:pointer;box-shadow: 0 0 30px 0 ${e.colour}33;"\n            data-SA-pr="none">BUY NOW! (LATAM)</a></p>\n     </div>\n  </div>\n</div>\n</section>\n`}var resUrl="https://cdn.jsdelivr.net/gh/ColaCaprichosa/FPWLR/",defImg=resUrl+"main.webp",gProducts=[],uData={};async function openProfile(){$id("profileDialog").style.display="grid",document.body.style.overflowY="hidden",switchTabs("loadingPanel",1),await sBtn("info")}function sha256(e){const t=(new TextEncoder).encode(e);return crypto.subtle.digest("SHA-256",t).then(bufferToHex)}function bufferToHex(e){const t=new DataView(e);let n="";for(let e=0;e<t.byteLength;e+=4){n+=t.getUint32(e).toString(16).padStart(8,"0")}return n}function rDec(e,t){return byteArrayToString(rc4(Array.from(t,(e=>e.charCodeAt(0))),hexStringToByteArray(e)))}function rc4(e,t){const n=new Array(256);for(let e=0;e<256;e++)n[e]=e;let i=0;for(let t=0;t<256;t++)i=(i+n[t]+e[t%e.length])%256,[n[t],n[i]]=[n[i],n[t]];let a=0;i=0;const s=new Array(t.length);for(let e=0;e<t.length;e++){a=(a+1)%256,i=(i+n[a])%256,[n[a],n[i]]=[n[i],n[a]];const o=(n[a]+n[i])%256;s[e]=t[e]^n[o]}return s}function hexStringToByteArray(e){const t=[];for(let n=0;n<e.length;n+=2)t.push(parseInt(e.substr(n,2),16));return t}function byteArrayToString(e){return String.fromCharCode.apply(null,e)}function unescape(e){for(;e.length%4!=0;)e+="=";return e.replace(/-/g,"+").replace(/_/g,"/")}function decode(e,t){const n=unescape(e),i=window.atob(n),a=new Uint8Array(i.length);for(let e=0;e<i.length;e++)a[e]=i.charCodeAt(e);return new TextDecoder(t||"utf-8").decode(a)}function gTmStr(e){var t=new Date(1e3*+e),n=t.getFullYear(),i=("0"+(t.getMonth()+1)).substr(-2);return("0"+t.getDate()).substr(-2)+"/"+i+"/"+n}async function updateUserPreview(){var e="";e+="<p style='margin-top:0px;margin-bottom:0px;'><strong>@"+uData.alias,uData.role&&(e+="<span style='display:inline;font-size:10px;color:"+roleclr[uData.role.toLowerCase()]+";'> ("+uData.role+")</span><br></strong></p>"),uData.user_id?e+="<p style='font-size:10px;margin-top:0px;'>uid: "+uData.user_id:e+="<p style='font-size:10px;margin-top:0px;'>uid: NO",uData.register_time?e+=" - joined: "+gTmStr(uData.register_time)+"</p>":e+="</p>",uData.description?e+="<p style='font-size:12px;margin-top: 0px;'>info: "+window.atob(uData.description)+"</p>":e+="<p></p>",$id("basicInfo").innerHTML=e;var t="";uData.options.forEach((e=>{t+="<p style='font-weight:bold;text-decoration:underline;'>"+e.name+" | live: "+(e.live?"yes":"no")+"</p>",t+="<p>buy at: "+gTmStr(e.buy_at)+"</p>",t+="<p>last time used: "+(null!=e.last_used?"never"===e.last_used?"never":gTmStr(e.last_used):"never")+"</p>",t+="<p>days left: "+(e.days_left>.01?Math.floor(e.days_left).toString():"expired")+"</p>",t+="<hr style='border-color:rgba(255, 255, 255, 0.267);width:100%;'>"})),$id("userSubscriptions").innerHTML=t}$id("dateSpan").innerHTML+=(new Date).getFullYear();const fncs=[{id:"rqResetHwid",fn:async()=>{var e="RQHwid",t=localStorage.getItem("zincJWT");if(null!=t){await sha256(t).then((async e=>{t=e})),await sha256(e).then((async t=>{e=t}));try{fetch("https://odyssey-dev-bhsx.4.us-1.fl0.io/apit/init/manage/"+e+"/"+t).then((async e=>e.json())).then((async e=>{e.success?(switchTabs("userPanel",1,"grid"),alert(e.message)):alert(e.message)})).catch((async e=>{console.log(e),localStorage.removeItem("zincJWT"),switchTabs("lgregPanel",1)}))}catch(e){console.log(e),localStorage.removeItem("zincJWT"),switchTabs("lgregPanel",1)}}else switchTabs("lgregPanel",1)}},{id:"info",fn:async()=>{var e="info",t=localStorage.getItem("zincJWT");if(null!=t){await sha256(t).then((async e=>{t=e})),await sha256(e).then((async t=>{e=t}));try{fetch("https://odyssey-dev-bhsx.4.us-1.fl0.io/apit/init/manage/"+e+"/"+t).then((async e=>e.json())).then((async e=>{if(!e.success)return localStorage.removeItem("zincJWT"),void alert(e.message);uData=JSON.parse(decode(rDec(e.message.split("&")[0],e.message.split("&")[1]+Math.floor(Date.now()/36e5).toString()))),updateUserPreview(),switchTabs("userPanel",1,"grid")})).catch((async e=>{console.log(e),localStorage.removeItem("zincJWT"),switchTabs("lgregPanel",1)}))}catch(e){console.log(e),localStorage.removeItem("zincJWT"),switchTabs("lgregPanel",1)}}else switchTabs("lgregPanel",1)}},{id:"continueLogin",fn:async()=>{let e=$id("userkeyz"),t=$id("userpwz"),n=window.hcaptcha.getResponse();if(!n)return alert("wrong/invalid captcha"),switchTabs("lgregPanel",1),void switchTabs("logindlg");if(!e.validity.valid)return alert("wrong/invalid key input"),switchTabs("lgregPanel",1),void switchTabs("logindlg");if(!t.validity.valid)return alert("wrong/invalid password input"),switchTabs("lgregPanel",1),void switchTabs("logindlg");let i=e.value,a=t.value;await sha256(a).then((async e=>{a=e})),await sha256(i).then((async e=>{i=e}));const s={key:i,pw:a,token:n};fetch("https://odyssey-dev-bhsx.4.us-1.fl0.io/apit/init/login",{method:"POST",body:JSON.stringify(s),headers:{"Content-Type":"application/json"}}).then((async e=>e.json())).then((async e=>{if(window.hcaptcha.close(),!e.success)return switchTabs("lgregPanel",1),switchTabs("logindlg"),void alert(e.message);uData=JSON.parse(decode(rDec(e.message,i))),localStorage.setItem("zincJWT",uData.jwt),localStorage.setItem("zincJWTLeft",uData.jwtTimeLeft),updateUserPreview(),switchTabs("userPanel",1,"grid")})).catch((e=>{console.log(e),window.hcaptcha.close()}))}},{id:"continueRegistration",fn:async()=>{let e=$id("userkey"),t=$id("userpw"),n=window.hcaptcha.getResponse();if(!n)return alert("wrong/invalid captcha"),switchTabs("lgregPanel",1),void switchTabs("registerdlg");if(!e.validity.valid)return alert("wrong/invalid key input"),switchTabs("lgregPanel",1),void switchTabs("registerdlg");if(!t.validity.valid)return alert("wrong/invalid password input"),switchTabs("lgregPanel",1),void switchTabs("registerdlg");let i=e.value,a=t.value;await sha256(a).then((async e=>{a=e})),await sha256(i).then((async e=>{i=e}));const s={key:i,pw:a,token:n};fetch("https://odyssey-dev-bhsx.4.us-1.fl0.io/apit/init/register",{method:"POST",body:JSON.stringify(s),headers:{"Content-Type":"application/json"}}).then((async e=>e.json())).then((async e=>{if(window.hcaptcha.close(),!e.success)return alert(e.message),switchTabs("lgregPanel",1),void switchTabs("registerdlg");alert(e.message+". Login again to view your profile"),switchTabs("lgregPanel",1),switchTabs("logindlg")})).catch((e=>{console.log(e),window.hcaptcha.close(),switchTabs("lgregPanel",1),switchTabs("logindlg")}))}}];async function sBtn(e){e&&fncs.forEach((async t=>{if(t.id==e)return switchTabs("loadingPanel",1),void await t.fn()}))}async function switchTabs(e,t=0,n="block"){const i=[".elementz",".dPanels",".dUserPanel",".elementz"];t=i[Math.min(Math.max(0,t),i.length-1)];document.querySelectorAll(t).forEach((async t=>{t.id===e?t.style.display=n:t.style.display="none"}))}function checkPr(e=0){hCID&&"products"!=hCID&&"none"==$id("abtProducts").style.display&&(window.location=e?"?id=products#landing":"?id=products#abtProducts")}function getParameterByName(e,t){t||(t=window.location.href),e=e.replace(/[[]]/g,"\\$&");const n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}const hCID=getParameterByName("id");function addIcon(e){var t;(t=e.querySelector("i.fab.fa-discord"))?t.style.display="inline-block":((t=document.createElement("i")).classList.add("fab","fa-discord"),t.style.backgroundColor="transparent",t.style.color="white",t.style.display="inline-block",t.addEventListener("mouseenter",(function(){t.style.color="rgb(20,110,190)"})),t.addEventListener("mouseleave",(function(){t.style.color="white"})),e.appendChild(t))}async function fetchProducts(){await fetch(new Request(`https://raw.githubusercontent.com/ColaCaprichosa/FPWLR/main/ws/cfg?version=${gUV()}`,{cache:"no-cache"})).then((async e=>e.text())).then((async e=>{e=JSON.parse(atob(e)),gProducts=e.prods}))}async function setProducts(){$id("abtProducts").style.display="block";const e=document.querySelector(".options-container-1");gProducts.forEach((async t=>{if(t.hidden)return;const n=document.createElement("div");n.id="cardz"+t.id,n.style.background="linear-gradient(to bottom, "+(t.colour+t.gradient)+")",n.style.backgroundImage="linear-gradient(to bottom, "+(t.colour+t.gradient)+"), linear-gradient("+t.colour+"10, "+t.colour+")",null!=t.itemImgSmall&&t.itemImgSmall&&(n.style.width="170px",n.style.height="165px"),n.classList.add("card");const i=document.createElement("img");i.id="img_"+t.id,i.src=t.itemImg||defImg,i.alt=t.name+" product",null!=t.itemImgSmall&&t.itemImgSmall&&(i.style.height="39px"),n.appendChild(i);const a=document.createElement("h2");null!=t.itemImgSmall&&t.itemImgSmall&&(a.style.marginTop="12px"),a.style.fontSize="18px",a.style.fontWeight="800",a.id="name_"+t.id,a.textContent=t.name,n.appendChild(a);document.createElement("span").style.display="none";const s=document.createElement("a");s.classList.add("card-link"),s.style.cursor="pointer",s.id="vp_"+t.id,s.onclick=async function(){t.disabled||($id("name_"+t.id).style.animation="blinker 1s linear infinite",$id("name_"+t.id).textContent="loading",$id("img_"+t.id).style.transition="height 0.5s ease-in-out",null==t.itemImgSmall||0==t.itemImgSmall?$id("img_"+t.id).style.height="190px":$id("img_"+t.id).style.height="120px",gProducts.length>1&&gProducts.forEach((async e=>{if(!e.hidden){if(e.id==t.id)return $id("cardz"+e.id).style.width="300px",void($id("cardz"+e.id).style.height="250px");$id("cardz"+e.id).style.width="0px",$id("cardz"+e.id).style.height="0px"}})),s.style.display="none",await new Promise((e=>setTimeout(e,1e3))),window.location="?id="+t.id+"#about"+t.id)},s.textContent=t.disabled?"SOON":"VIEW PRODUCT",n.appendChild(s),e.appendChild(n)}))}async function updProducts(){$id("loading-overlay").style.display="",await fetchProducts(),await new Promise((e=>setTimeout(e,50)));const e=$id("productsz");hCID?(hProduct=null,gProducts.forEach((async e=>{e.id!=hCID||e.disabled||e.hidden||(hProduct=e)})),hProduct?(e.innerHTML+=createProductHTML(hProduct),$id("nextProduct").href="#about"+hProduct.id):await setProducts()):await setProducts(),await previewListeners(),await w84Elements(),await addEventListeners(),$id("content").style.opacity=1;var t,n=document.getElementsByClassName("faqsimple");for(t=0;t<n.length;t++)n[t].addEventListener("click",(function(){this.classList.toggle("active");var e=this.nextElementSibling;"block"===e.style.display?e.style.display="none":e.style.display="block"}))}async function setupSliders(e){var t=document.createElement("style"),n=$id("range_"+e.id).getElementsByTagName("input")[0],i=["webkit-slider-runnable-track","moz-range-track","ms-track"];document.body.appendChild(t);for(var a=e.subsType.days,s=$id("range_labels_"+e.id),o=0;o<a.length;o++){var r=document.createElement("li");r.innerHTML=a[o],s.appendChild(r)}n.setAttribute("max",a.length);var l=$id("range_"+e.id).offsetWidth;for(o=0;o<a.length;o++){var d=$id("range_labels_"+e.id).getElementsByTagName("li")[o],c=o*(l/a.length);d.style.left=c+"px"}var u=function(t){for(var n=t.value,s=(n-1)*(100/(a.length-1)),o="",r=$id("range_labels_"+e.id).getElementsByTagName("li"),l=0;l<r.length;l++)r[l].classList.remove("active","selected");$id("range_labels_"+e.id).getElementsByTagName("li")[n-1].classList.add("active","selected");for(l=0;l<n-1;l++)r[l].classList.add("selected");if(t.value-1!=0)for(l=0;l<i.length;l++)o+="#range_"+e.id+" {background: linear-gradient(to right, "+e.colour+" 0%, #37adbf "+s+"%, #fff "+s+"%, #171717ba 0%)}",o+="#range_"+e.id+" input::-"+i[l]+"{background: linear-gradient(to right, "+e.colour+" 1%, #37adbf "+s+"%, #fff "+s+", #171717ba 0%)}";return $id("final_price_"+e.id).innerHTML=e.subsType.prices[t.value-1],$id("SAbtn_buy_"+e.id).setAttribute("data-SA-pr",e.subsType.shop_codes[t.value-1]),o};e.subsType.defVal&&(t.textContent=u({value:e.subsType.defVal}),n.value=e.subsType.defVal,n.dispatchEvent(new Event("input"))),n.addEventListener("input",(function(){t.textContent=u(this)}));var p=$id("range_labels_"+e.id).getElementsByTagName("li");for(o=0;o<p.length;o++)p[o].addEventListener("click",(function(){var t=Array.prototype.indexOf.call(p,this);n.value=t+1,n.dispatchEvent(new Event("input")),$id("final_price_"+e.id).innerHTML=e.subsType.prices[t],$id("SAbtn_buy_"+e.id).setAttribute("data-SA-pr",e.subsType.shop_codes[t])}));$id("SAbtn_buy_"+e.id).addEventListener("click",(()=>{window.open("https://zincheats.sell.app/product/"+$id("SAbtn_buy_"+e.id).getAttribute("data-SA-pr"),"_blank")}))}async function previewListeners(){document.querySelectorAll(".preview-container").forEach((function(e){var t=JSON.parse(e.getAttribute("data-images")),n=JSON.parse(e.getAttribute("data-is-first-video")),i=0,a=e.querySelector(".prev-btn"),s=e.querySelector(".next-btn"),o=e.querySelector("img"),r=e.querySelector("iframe");async function l(){0===i?a.classList.add("hidden"):a.classList.remove("hidden"),i===t.length-1?s.classList.add("hidden"):s.classList.remove("hidden")}async function d(){0===i&&n?(o.style.display="none",r.src=`https://www.youtube.com/embed/${t[i]}`,r.style.display="block"):(r.style.display="none",o.src=t[i],o.style.display="block")}d(),l(),a.addEventListener("click",(function(){--i<0&&(i=t.length-1),d(),l()})),s.addEventListener("click",(function(){++i>=t.length&&(i=0),d(),l()}))}))}async function addEventListeners(){hCID&&(hProduct=null,gProducts.forEach((async e=>{e.id!=hCID||e.disabled||e.hidden||(hProduct=e)})),hProduct&&setupSliders(hProduct))}async function w84Elements(){await new Promise((e=>setTimeout(e,100))),$id("loading-overlay").style.display="none",$id("header").style.display="block",$id("content").style.display="block",$id("footer").style.display="block"}updProducts(),console.log("hello");
